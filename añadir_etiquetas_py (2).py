# -*- coding: utf-8 -*-
"""añadir_etiquetas.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1l-s9uccYiCk2EsgKLN9Q_0ZEXr9Cmyt4
"""

pip install spacy -U pip setuptools wheel

pip install -U spacy

import spacy
from spacy import displacy
from pathlib import Path

import sys
!{sys.executable} -m spacy download es_core_news_sm

import os #"os" es una función que permite interactuar con el sistema operativo directamente desde tu código

import chardet #ayuda a identificar en que codificación está escrito, ejemplo:utf-8

import re

import pandas as pd

"""**Importar carpeta de Google Drive a Google Colab**"""

#ruta a carpeta de archivos
carpeta_archivos_lab = "Transcripciones-trastornos-mentales"

def agregar_delimitadores(patron):
    # Añade \b al principio y al final del patrón si no están presentes
    if not patron.startswith(r'\b'):
        patron = r'\b' + patron
    if not patron.endswith(r'\b'):
        patron = patron + r'\b'
    return patron

df = pd.read_csv("categorias_patrones_relacionessociales.csv")

#aplicar la función de añadir delimitadores \b a la columna de los patrones
df['Patronpalabra'] = df['Patronpalabra'].apply(agregar_delimitadores)

print(df[['Patronpalabra', 'Categoria']])

#convertir dataframe en un diccionario
diccionario = dict(zip(df["Patronpalabra"], df["Categoria"]))
print(diccionario)

#zip es un iterador de tupas, combina las dos columnas en pares
#dict lo convierte en diccionario, primer elemento de cada tupla se convierte en la CLAVE y el segundo elemento en el VALOR.

"""Buscar palabras en archivo"""

def encontrar_coincidencias_categorias(linea, diccionario):
    # List to store the matched categories
    coincidencias = []

    # Recorre el diccionario para encontrar las palabras que coincidan
    for palabra, categoria in diccionario.items():
      for match in re.finditer(palabra, linea):
        coincidencias.append((match.group(), categoria))  # Store the match and the category

    # Return the list of matches and categories, or None if no matches
    return coincidencias if coincidencias else None


#ruta salida donde se guardan los resultados
ruta_salida = "tabla_categorias.txt"

# Folder containing the files to search in
carpeta_archivos_lab = "Transcripciones-trastornos-mentales"

# Iterate over all files in the folder
with open(ruta_salida, "w", encoding="utf-8") as salida:
    for filename in os.listdir(carpeta_archivos_lab):
        # Check if the item is a file (not a folder)
        file_path = os.path.join(carpeta_archivos_lab, filename)
        if os.path.isfile(file_path):
            # Open each file and read it line by line
            with open(file_path, "r", encoding="utf-8") as file:
                for linea in file:
                    # Find matches and categories
                    resultados = encontrar_coincidencias_categorias(linea, diccionario)
                    if resultados:
                        for match, categoria in resultados:
                            # Print the filename, match, category, and line
                            print(f"{categoria} | {match} | {linea.strip()} |{filename}")
                            # Write to the output file
                            salida.write(f"{categoria} | {match} | {linea.strip()} |{filename}\n")